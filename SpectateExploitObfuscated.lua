-- Generated using RoadToGlory's Converter v1.1 (RoadToGlory#9879)

-- Instances:

local Converted = {
	["_Spectate"] = Instance.new("ScreenGui");
	["_BottomBar"] = Instance.new("Frame");
	["_Previous"] = Instance.new("ImageButton");
	["_UICorner"] = Instance.new("UICorner");
	["_TextLabel"] = Instance.new("TextLabel");
	["_UITextSizeConstraint"] = Instance.new("UITextSizeConstraint");
	["_LocalScript"] = Instance.new("LocalScript");
	["_Next"] = Instance.new("ImageButton");
	["_UICorner1"] = Instance.new("UICorner");
	["_PlayerListFrame"] = Instance.new("ScrollingFrame");
	["_UIListLayout"] = Instance.new("UIListLayout");
	["_OpenCloseToggle"] = Instance.new("TextButton");
	["_LocalScript1"] = Instance.new("LocalScript");
	["_ListTemplate"] = Instance.new("TextButton");
}

-- Properties:

Converted["_Spectate"].ResetOnSpawn = false
Converted["_Spectate"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_Spectate"].Name = "Spectate"

if syn then
	syn.protect_gui(Converted["_Spectate"])
	Converted["_Spectate"].Parent = game.CoreGui
else
	Converted["_Spectate"].Parent = gethui() or game.CoreGui
end

Converted["_BottomBar"].Active = true
Converted["_BottomBar"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_BottomBar"].BackgroundTransparency = 0.5
Converted["_BottomBar"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_BottomBar"].BorderSizePixel = 0
Converted["_BottomBar"].Position = UDim2.new(0.235306546, 0, 0.770401597, 0)
Converted["_BottomBar"].Size = UDim2.new(0.52825743, 0, 0.135287657, 0)
Converted["_BottomBar"].Visible = false
Converted["_BottomBar"].Name = "BottomBar"
Converted["_BottomBar"].Parent = Converted["_Spectate"]

Converted["_Previous"].Image = "rbxassetid://13539001291"
Converted["_Previous"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Previous"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Previous"].BorderSizePixel = 0
Converted["_Previous"].Position = UDim2.new(0.034293551, 0, 0.100000001, 0)
Converted["_Previous"].Size = UDim2.new(0.115497075, 0, 0.790000021, 0)
Converted["_Previous"].Name = "Previous"
Converted["_Previous"].Parent = Converted["_BottomBar"]

Converted["_UICorner"].CornerRadius = UDim.new(0.100000001, 0)
Converted["_UICorner"].Parent = Converted["_Previous"]

Converted["_TextLabel"].Font = Enum.Font.SourceSans
Converted["_TextLabel"].Text = "Placeholder"
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 57
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Position = UDim2.new(0.218143046, 0, 0.099999994, 0)
Converted["_TextLabel"].Size = UDim2.new(0.564327419, 0, 0.790000021, 0)
Converted["_TextLabel"].Parent = Converted["_BottomBar"]

Converted["_UITextSizeConstraint"].MaxTextSize = 57
Converted["_UITextSizeConstraint"].Parent = Converted["_TextLabel"]

Converted["_Next"].Image = "rbxassetid://13539001498"
Converted["_Next"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Next"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Next"].BorderSizePixel = 0
Converted["_Next"].Position = UDim2.new(0.857338846, 0, 0.100000001, 0)
Converted["_Next"].Size = UDim2.new(0.115497075, 0, 0.790000021, 0)
Converted["_Next"].Name = "Next"
Converted["_Next"].Parent = Converted["_BottomBar"]

Converted["_UICorner1"].CornerRadius = UDim.new(0.100000001, 0)
Converted["_UICorner1"].Parent = Converted["_Next"]

Converted["_PlayerListFrame"].AutomaticCanvasSize = Enum.AutomaticSize.Y
Converted["_PlayerListFrame"].CanvasSize = UDim2.new(0, 0, 0, 0)
Converted["_PlayerListFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_PlayerListFrame"].Active = true
Converted["_PlayerListFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_PlayerListFrame"].BackgroundTransparency = 0.5
Converted["_PlayerListFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_PlayerListFrame"].BorderSizePixel = 0
Converted["_PlayerListFrame"].Position = UDim2.new(0.00890710019, 0, 0.195538044, 0)
Converted["_PlayerListFrame"].Size = UDim2.new(0.207221344, 0, 0.608923912, 0)
Converted["_PlayerListFrame"].Visible = false
Converted["_PlayerListFrame"].Name = "PlayerListFrame"
Converted["_PlayerListFrame"].Parent = Converted["_Spectate"]

Converted["_UIListLayout"].ItemLineAlignment = Enum.ItemLineAlignment.End
Converted["_UIListLayout"].Padding = UDim.new(0, 5)
Converted["_UIListLayout"].HorizontalAlignment = Enum.HorizontalAlignment.Center
Converted["_UIListLayout"].SortOrder = Enum.SortOrder.LayoutOrder
Converted["_UIListLayout"].Parent = Converted["_PlayerListFrame"]

Converted["_OpenCloseToggle"].Font = Enum.Font.SourceSans
Converted["_OpenCloseToggle"].Text = "Spectate"
Converted["_OpenCloseToggle"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_OpenCloseToggle"].TextScaled = true
Converted["_OpenCloseToggle"].TextSize = 14
Converted["_OpenCloseToggle"].TextWrapped = true
Converted["_OpenCloseToggle"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_OpenCloseToggle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_OpenCloseToggle"].BorderSizePixel = 0
Converted["_OpenCloseToggle"].Position = UDim2.new(0.421535343, 0, 0.948563457, 0)
Converted["_OpenCloseToggle"].Size = UDim2.new(0.155416012, 0, 0.0500852689, 0)
Converted["_OpenCloseToggle"].Name = "OpenCloseToggle"
Converted["_OpenCloseToggle"].Parent = Converted["_Spectate"]

Converted["_ListTemplate"].Font = Enum.Font.SourceSans
Converted["_ListTemplate"].Text = "Placeholder"
Converted["_ListTemplate"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ListTemplate"].TextScaled = true
Converted["_ListTemplate"].TextSize = 14
Converted["_ListTemplate"].TextWrapped = true
Converted["_ListTemplate"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ListTemplate"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ListTemplate"].BorderSizePixel = 0
Converted["_ListTemplate"].Size = UDim2.new(1, 0, 0, 35)
Converted["_ListTemplate"].Visible = false
Converted["_ListTemplate"].Name = "ListTemplate"
Converted["_ListTemplate"].Parent = Converted["_Spectate"]

-- Fake Module Scripts:

local fake_module_scripts = {}


-- Fake Local Scripts:

local function SCISK_fake_script() -- Fake Script: StarterGui.Spectate.BottomBar.TextLabel.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_TextLabel"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	--first run
	local LocalPlayer = game.Players.LocalPlayer
	script.Parent.Text = LocalPlayer.DisplayName.." (@"..LocalPlayer.Name..")"
end
local function DMBWQLQ_fake_script() -- Fake Script: StarterGui.Spectate.LocalScript
    local script = Instance.new("LocalScript")
    script.Name = "LocalScript"
    script.Parent = Converted["_Spectate"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local LocalPlayer = game.Players.LocalPlayer
	local cam = workspace.CurrentCamera
	local Players = game:GetService("Players")
	local playerList = Players:GetPlayers()
	local position = 1
	local highlightedPlayerName = LocalPlayer.Name  -- Store the name of the currently highlighted player
	local spectating = false  -- Track if currently spectating
	
	local function highlightCurrentPlayer(playerName)
		for _, child in pairs(script.Parent.PlayerListFrame:GetChildren()) do
			if child:IsA("TextButton") then
				if child.Name == playerName then
					child.BackgroundColor3 = Color3.fromRGB(255, 255, 0)  -- Highlight color
				else
					child.BackgroundColor3 = Color3.fromRGB(255, 255, 255)  -- Default color
				end
			end
		end
		highlightedPlayerName = playerName  -- Update the highlighted player name
	end
	
	local function updateCamera(playerObject)
		cam.CameraSubject = playerObject.Character
		script.Parent.BottomBar.TextLabel.Text = playerObject.DisplayName.." (@"..playerObject.Name..")"
		highlightCurrentPlayer(playerObject.Name)
	
		-- Listen for the CharacterAdded event to update the camera when the player respawns
		playerObject.CharacterAdded:Connect(function(character)
			cam.CameraSubject = character
		end)
	end
	
	local function clearPlayerListFrame()
		for _, child in pairs(script.Parent.PlayerListFrame:GetChildren()) do
			if child:IsA("TextButton") then
				child:Destroy()
			end
		end
	end
	
	local function updatePlayerList()
		playerList = Players:GetPlayers()
		clearPlayerListFrame()
	
		for i, v in pairs(playerList) do
			local PlayerListFrameItem = script.Parent.ListTemplate:Clone()
			PlayerListFrameItem.Name = v.Name
			PlayerListFrameItem.Parent = script.Parent.PlayerListFrame
			PlayerListFrameItem.Text = v.DisplayName.." (@"..v.Name..")"
			PlayerListFrameItem.Visible = true
			PlayerListFrameItem.MouseButton1Click:Connect(function()
				position = i
				updateCamera(v)
				spectating = true
			end)
		end
	
		-- Reapply the highlight to the previously highlighted player
		if highlightedPlayerName then
			highlightCurrentPlayer(highlightedPlayerName)
		end
	end
	
	-- Handle player leaving to update camera if necessary
	local function handlePlayerRemoving(player)
		if playerList[position] == player then
			position = (position % #playerList) + 1
			updateCamera(playerList[position])
		end
		updatePlayerList()
	end
	
	-- Handle LocalPlayer respawning
	LocalPlayer.CharacterAdded:Connect(function(character)
		if spectating and playerList[position] then
			updateCamera(playerList[position])
		end
	
		-- Listen for the Humanoid.Died event to update the camera when the LocalPlayer dies
		character:WaitForChild("Humanoid").Died:Connect(function()
			if spectating and playerList[position] then
				updateCamera(playerList[position])
			end
		end)
	end)
	
	-- Initial population of the player list
	updatePlayerList()
	
	-- Update the player list when a player joins or leaves
	Players.PlayerAdded:Connect(updatePlayerList)
	Players.PlayerRemoving:Connect(handlePlayerRemoving)
	
	script.Parent.BottomBar.Previous.MouseButton1Click:Connect(function()
		position = (position - 1 < 1) and #playerList or (position - 1)
		updateCamera(playerList[position])
		spectating = true
	end)
	
	script.Parent.BottomBar.Next.MouseButton1Click:Connect(function()
		position = (position + 1 > #playerList) and 1 or (position + 1)
		updateCamera(playerList[position])
		spectating = true
	end)
	
	-- Open/Close toggle button
	script.Parent.OpenCloseToggle.MouseButton1Click:Connect(function()
		if script.Parent.OpenCloseToggle.Text == "Spectate" then
			script.Parent.OpenCloseToggle.Text = "Exit"
			script.Parent.OpenCloseToggle.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
	
			script.Parent.BottomBar.Visible = true
			script.Parent.PlayerListFrame.Visible = true
	
			-- Highlight the first player in the player list and set the camera to them
			if #playerList > 0 then
				position = 1
				updateCamera(playerList[position])
				spectating = true
			end
		elseif script.Parent.OpenCloseToggle.Text == "Exit" then
			script.Parent.OpenCloseToggle.Text = "Spectate"
			script.Parent.OpenCloseToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	
			script.Parent.BottomBar.Visible = false
			script.Parent.PlayerListFrame.Visible = false
	
			updateCamera(LocalPlayer)
			spectating = false
		end
	end)
end

coroutine.wrap(SCISK_fake_script)()
coroutine.wrap(DMBWQLQ_fake_script)()
